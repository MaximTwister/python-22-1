-- 1. Find the total revenue generated by the restaurant for a specific period of time.

DO $$
DECLARE
    start_date DATE := '2023-01-01';
    end_date DATE := '2023-01-31';
    revenue NUMERIC(10, 2);
BEGIN
 with basic as (
select m.id as meals_id
, concat(mc.main_course_name , ' + ', d.drink_name) as meal_name
, (mc.price + d.price) as meal_price
, om.portions
, o.id as order_id
, o.order_date
, o.customer_id
, (mc.price + d.price)*om.portions as basic_sum
, dis.percents as perc_meal
, dis."period"
, d2.percents as perc_custom
, d2."period"
, case when dis.period @> o.order_date and dis.meal_id is not null then ((mc.price + d.price)*om.portions * (100 - dis.percents)/100)::numeric(10,2)
       when d2.period @> o.order_date and d2.customer_id  is not null then ((mc.price + d.price)*om.portions * (100 - d2.percents)/100)::numeric(10,2)
       else (mc.price + d.price)*om.portions
       end sum_disc

FROM meals m
join main_courses mc on mc.id = m.main_course_id
join drinks d on d.id = m.drink_id
join order_meal om on m.id = om.meal_id
join orders o on om.order_id = o.id
join customers c on c.id = o.customer_id
left join discounts dis on dis.meal_id = m.id
left join discounts d2 on d2.customer_id = c.id
WHERE o.order_date BETWEEN start_date AND end_date
order by o.order_date)


SELECT SUM(basic.sum_disc) INTO revenue FROM basic WHERE basic.order_date BETWEEN start_date AND end_date;
    RAISE NOTICE '[% - %] REVENUE: %', start_date, end_date, revenue;
END;
$$;